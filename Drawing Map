using System;

namespace HomeWork3
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;

            char[,] map = new char[,] {
                {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', },
                {'#', 'X', ' ', '#', ' ', ' ', '#', ' ', ' ', 'X', ' ', ' ', '#', ' ', 'X', ' ', ' ', ' ', ' ', 'X', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', },
                {'#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', ' ', '#', '#', '#', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', '#', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', },
                {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', }};
            int userPositionX = 9;
            int userPositionY = 9;
            char graundSymbol = ' ';
            char treasureSymbol = 'X';
            int collectedTreasures = 0;
            int allTreasures = 5;

            while (collectedTreasures < allTreasures)
            {
                DrawBag(collectedTreasures, allTreasures);
                DrawMap(map);
                DrawPlaer(userPositionX, userPositionY);
                MovePlaer(ref userPositionX, ref userPositionY, map);

                if (map[userPositionX, userPositionY] == treasureSymbol)
                {
                    map[userPositionX, userPositionY] = graundSymbol;
                    collectedTreasures++;
                }

                Console.Clear();
            }

            Console.WriteLine("Ты победил!!!");
        }

        static void DrawMap(char[,] map)
        {
            Console.SetCursorPosition(0, 0);

            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }

                Console.WriteLine();
            }
        }

        static void DrawPlaer(int userPositionX, int userPositionY)
        {
            char plaerSymbol = '\u0002';

            Console.SetCursorPosition(userPositionY, userPositionX);
            Console.Write(plaerSymbol);
        }

        static void DrawBag(int countItem, int maxItem)
        {
            Console.SetCursorPosition(0, 15);
            Console.WriteLine($"Собранные сокровища {countItem}/{maxItem}");
        }

        static void MovePlaer(ref int userPositionX, ref int userPositionY, char[,] map)
        {
            char wallSymbol = '#';

            ConsoleKeyInfo userInput = Console.ReadKey();

            switch (userInput.Key)
            {
                case ConsoleKey.UpArrow:
                    if (map[userPositionX - 1, userPositionY] != wallSymbol)
                        userPositionX--;                   
                    break;
                case ConsoleKey.DownArrow:
                    if (map[userPositionX + 1, userPositionY] != wallSymbol)
                        userPositionX++;                    
                    break;
                case ConsoleKey.LeftArrow:
                    if (map[userPositionX, userPositionY - 1] != wallSymbol)
                        userPositionY--;                   
                    break;
                case ConsoleKey.RightArrow:
                    if (map[userPositionX, userPositionY + 1] != wallSymbol)
                        userPositionY++;                   
                    break;
            }
        }
    }
}
