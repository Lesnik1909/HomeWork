using System;

namespace HomeWork3
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;
            
            char[,] map = new char[,] {
                {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', },
                {'#', 'X', ' ', '#', ' ', ' ', '#', ' ', ' ', 'X', ' ', ' ', '#', ' ', 'X', ' ', ' ', ' ', ' ', 'X', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', },
                {'#', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', ' ', '#', '#', '#', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', '#', '#', '#', '#', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', '#', '#', '#', '#', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', '#', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', ' ', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', '#', ' ', ' ', '#', ' ', '#', },
                {'#', ' ', ' ', '#', ' ', ' ', '#', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '#', ' ', '#', },
                {'#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', '#', }};
            int userX = 9, userY = 9;
            char graundSymbol = ' ';
            char plaerSymbol = '\u0002';
            char treasureSymbol = 'X';
            int collectedTreasures = 0;
            int allTreasures = 5;


            while (collectedTreasures < allTreasures)
            {
                Console.SetCursorPosition(0, 15);
                Console.WriteLine($"Собранные сокровища {collectedTreasures}/{allTreasures}");
                DrawMap(map);
                Console.SetCursorPosition(userY, userX);
                Console.Write(plaerSymbol);
                PlaerMove(ref userX, ref userY, map);

                if (map[userX,userY] == treasureSymbol)
                {
                    map[userX, userY] = graundSymbol;
                    collectedTreasures++;
                }

                Console.Clear();
            }

            Console.WriteLine("Ты победил!!!");
        }

        static void DrawMap(char[,] map)
        {
            Console.SetCursorPosition(0, 0);

            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);
                }
                
                Console.WriteLine();
            }
        }

        static void PlaerMove(ref int userX, ref int userY, char[,] map)
        {
            char wallSymbol = '#';
            ConsoleKeyInfo userInput = Console.ReadKey();

            switch (userInput.Key)
            {
                case ConsoleKey.UpArrow:
                    if (map[userX - 1, userY] != wallSymbol)
                    {
                        userX--;
                    }
                    break;
                case ConsoleKey.DownArrow:
                    if (map[userX + 1, userY] != wallSymbol)
                    {
                        userX++;
                    }
                    break;
                case ConsoleKey.LeftArrow:
                    if (map[userX, userY - 1] != wallSymbol)
                    {
                        userY--;
                    }
                    break;
                case ConsoleKey.RightArrow:
                    if (map[userX, userY + 1] != wallSymbol)
                    {
                        userY++;
                    }
                    break;
            }
        }
    }
}
