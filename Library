using System;
using System.Collections.Generic;

namespace HomeWork3
{
    class Program
    {
        static void Main(string[] args)
        {
            BookStorage library = new BookStorage();
            library.Work();
        }
    }

    class Book
    {
        public string Name { get; private set; }
        public string Autor { get; private set; }
        public string Genre { get; private set; }
        public int YearOfIssue { get; private set; }

        public Book(string name, string autor, string genre, int year)
        {
            Name = name;
            Autor = autor;
            Genre = genre;
            YearOfIssue = year;
        }

        public void ShowInfo()
        {
            Console.WriteLine($"Книга: '{Name}', написана в {YearOfIssue} году.\n  Автор: {Autor}. Жанр книги: {Genre}");
        }
    }

    class BookStorage
    {
        private const string CommandShowAllBooks = "show";
        private const string CommandAddBook = "add";
        private const string CommandRemoveBook = "rem";
        private const string CommandSearchBooks = "see";
        private const string CommandExit = "exit";
        private const string CommandName = "name";
        private const string CommandAutor = "autor";
        private const string CommandGener = "gener";
        private const string CommandYear = "year";

        static int PlayerIdCounter = 0;

        private Dictionary<int, Book> _bookStorage;
        private bool _isWorking;

        public BookStorage()
        {
            _bookStorage = new Dictionary<int, Book>();
            _isWorking = true;
        }

        public void Work()
        {
            string userInput;

            while (_isWorking)
            {
                Console.Clear();
                Console.WriteLine($"{CommandShowAllBooks} - Показать книги");
                Console.WriteLine($"{CommandAddBook} - Добавить книгу");
                Console.WriteLine($"{CommandRemoveBook} - Удалить книгу");
                Console.WriteLine($"{CommandSearchBooks} - Поиск книг по параметру");
                Console.WriteLine($"{CommandExit} - Выход из программы");

                userInput = Console.ReadLine();
                switch (userInput)
                {
                    case CommandShowAllBooks:
                        ShowBooks();
                        break;
                    case CommandAddBook:
                        AddBook();
                        break;
                    case CommandRemoveBook:
                        RemoveBook();
                        break;
                    case CommandSearchBooks:
                        SearchBooks();
                        break;
                    case CommandExit:
                        _isWorking = false;
                        break;
                    default:
                        Console.WriteLine("Чёт какая-то ерунда!");
                        break;
                }
            }
        }

        private void AddBook()
        {
            string name;
            string autor;
            string gener;

            Console.Write("Введите название книги: ");
            name = Console.ReadLine();
            Console.Write("Введите имя автора: ");
            autor = Console.ReadLine();
            Console.Write("Введите жанр: ");
            gener = Console.ReadLine();
            Console.Write("Введите год написания книги: ");
            int.TryParse(Console.ReadLine(), out int year);
            _bookStorage.Add(++PlayerIdCounter, new Book(name, autor, gener, year)); 
        }

        private int GettingId()
        {
            int nonExistentId = 0;

            Console.Write("Введите ID книги: ");
            int.TryParse(Console.ReadLine(), out int changePlayerId);

            if (_bookStorage.ContainsKey(changePlayerId))
            {
                return changePlayerId;
            }
            else
            {
                Console.WriteLine("Книги с таким ID не существует");
                return nonExistentId;
                Console.ReadKey();
            }
        }

        private void RemoveBook()
        {
            int changePlayerId = GettingId();

            if (changePlayerId > 0)
            {
                Console.WriteLine($"Книга удалена");
                _bookStorage.Remove(changePlayerId);
            }

            Console.ReadKey();
        }

        private bool FoundByName()
        {
            bool isSuccess = false;
            Console.Write("Введите название книги для поиска: ");
            string userSearch = Console.ReadLine();

            foreach (var book in _bookStorage)
            {
                if (book.Value.Name == userSearch)
                {
                    book.Value.ShowInfo();
                    isSuccess = true;
                }
            }

            return isSuccess;
        }

        private bool FoundByAuthor()
        {
            bool isSuccess = false;
            Console.Write("Введите имя автора книги для поиска: ");
            string userSearch = Console.ReadLine();

            foreach (var book in _bookStorage)
            {
                if (book.Value.Autor == userSearch)
                {
                    book.Value.ShowInfo();
                    isSuccess = true;
                }
            }

            return isSuccess;
        }

        private bool FoundByGenre()
        {
            bool isSuccess = false;
            Console.Write("Введите жанр книги для поиска: ");
            string userSearch = Console.ReadLine();

            foreach (var book in _bookStorage)
            {
                if (book.Value.Genre == userSearch)
                {
                    book.Value.ShowInfo();
                    isSuccess = true;
                }
            }

            return isSuccess;
        }

        private bool FoundByYear()
        {
            bool isSuccess = false;
            Console.Write("Введите год выпуска книги для поиска: ");

            int.TryParse(Console.ReadLine(), out int userSearch);

            foreach (var book in _bookStorage)
            {
                if (book.Value.YearOfIssue == userSearch)
                {
                    book.Value.ShowInfo();
                    isSuccess = true;
                }
            }

            return isSuccess;
        }

        private void SearchBooks()
        {
            string userInput;
            bool isSuccess = false;
            Console.Clear();
            Console.WriteLine("По какому признаку будем искать:");
            Console.WriteLine($"{CommandName} - по названию");
            Console.WriteLine($"{CommandAutor} - по автору");
            Console.WriteLine($"{CommandGener} - по жанру");
            Console.WriteLine($"{CommandYear} - по году");
            userInput = Console.ReadLine();

            switch (userInput)
            {
                case CommandName:
                    isSuccess = FoundByName();
                    break;
                case CommandAutor:
                    isSuccess = FoundByAuthor();
                    break;
                case CommandGener:
                    isSuccess = FoundByGenre();
                    break;
                case CommandYear:
                    isSuccess = FoundByYear();
                    break;
            }

            if (isSuccess == false)
            {
                Console.WriteLine("Совпадений нет!");
            }

            Console.ReadKey();
        }

        private void ShowBooks()
        {
            foreach (var book in _bookStorage)
            {
                Console.Write($"{book.Key} ");
                book.Value.ShowInfo();
            }

            Console.ReadKey();
        }
    }
}
