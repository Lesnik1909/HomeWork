using System;
using System.Collections.Generic;

internal class Program
{
    private static void Main(string[] args)
    {
        DataBase mybase = new DataBase();

        mybase.Work();        
    }
}

class Player
{
    private string _name;
    private int _level;
    private bool _isBanned;

    public Player(string name, int level)
    {
        _name = name;
        _level = level;
        _isBanned = false;
    }

    public void Unban()
    {
        _isBanned = false;
    }

    public void Ban()
    {
        _isBanned = true;
    }

    public void ShowInfo()
    {
        Console.WriteLine($"Игрок: {_name}, {_level} уровня, {ShowBannedStatus()}");
    }

    private string ShowBannedStatus()
    {
        string text = "Не забанен";

        if (_isBanned == true)
        {
            text = "Забанен";
        }

        return text;
    }
}

class DataBase
{
    private const string CommandShowAllElement = "show";
    private const string CommandAddElement = "add";
    private const string CommandRemoveElement = "rem";
    private const string CommandExit = "exit";
    private const string CommandBanned = "ban";
    private const string CommandUnbanned = "unb";

    static int PlayerIdCounter = 0;

    private Dictionary<int, Player> _persons;

    public DataBase()
    {
        _persons = new Dictionary<int, Player>();
    }

    public void Work()
    {
        string userInput;
        bool isWorking = true;

        while (isWorking)
        {
            Console.Clear();
            Console.WriteLine($"{CommandShowAllElement} - Вывод всей базы");
            Console.WriteLine($"{CommandAddElement} - Добавлние нового игрока");
            Console.WriteLine($"{CommandRemoveElement} - Удаление игрока по ID");
            Console.WriteLine($"{CommandBanned} - Изменение статуса игрока на Забанен");
            Console.WriteLine($"{CommandUnbanned} - Изменение статуса игрока на Разбаен");
            Console.WriteLine($"{CommandExit} - Выход из программы");
            Console.Write("Выберите пункт меню ");
            userInput = Console.ReadLine();

            switch (userInput)
            {
                case CommandShowAllElement:
                    ShowPlayers();
                    break;
                case CommandAddElement:
                    AddPlayer();
                    break;
                case CommandRemoveElement:
                    RemovePlayer();
                    break;
                case CommandBanned:
                    BanPlayer();
                    break;
                case CommandUnbanned:
                    UnbanPlayer();
                    break;
                case CommandExit:
                    isWorking = false;
                    break;
            }
        }
    }

    private void AddPlayer()
    {
        Console.Write("Введите имя нового игрока: ");
        string userName = Console.ReadLine();
        Console.Write($"Введите уровень игрока {userName}: ");

        if (int.TryParse(Console.ReadLine(), out int userLevel) == false)
        {
            userLevel = 1;
        }

        _persons.Add(++PlayerIdCounter, new Player(userName, userLevel));
    }

    private int GettingIdPlayer()
    {
        int nonExistentId = 0;

        Console.Write("Введите ID игрока: ");
        int.TryParse(Console.ReadLine(), out int changePlayerId);

        if (_persons.ContainsKey(changePlayerId))
        {
            return changePlayerId;
        }
        else
        {
            Console.WriteLine("Игрока с таким ID не существует");
            return nonExistentId;
            Console.ReadKey();
        }
    }

    private void RemovePlayer()
    {
        int changePlayerId = GettingIdPlayer();

        if (changePlayerId > 0)
        {
            Console.WriteLine($"Игрок удален");
            _persons.Remove(changePlayerId);
        }

        Console.ReadKey();        
    }

    private void ShowPlayers()
    {
        foreach (var element in _persons)
        {
            Console.Write($"{element.Key}. ");
            element.Value.ShowInfo();
        }

        Console.ReadKey();
    }

    private void BanPlayer ()
    {
        int changePlayerId = GettingIdPlayer();

        if (changePlayerId > 0)
        {
            _persons[changePlayerId].Ban();
            Console.WriteLine($"Статус игрока изменен на Забанен");
        }

        Console.ReadKey();
    }

    private void UnbanPlayer ()
    {
        int changePlayerId = GettingIdPlayer();

        if (changePlayerId > 0)
        {
            _persons[changePlayerId].Unban();
            Console.WriteLine($"Статус игрока изменен на Не забанен");
        }       

        Console.ReadKey();
    }
}
