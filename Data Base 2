using System;
using System.Collections.Generic;

internal class Program
{
    private const string CommandShowAllElement = "show";
    private const string CommandAddElement = "add";
    private const string CommandRemoveElement = "rem";
    private const string CommandChangeStatus = "ban";
    private const string CommandExit = "exit";

    private static void Main(string[] args)
    {
        string userInput;
        bool isWorking = true;
        DataBase mybase = new DataBase();

        while (isWorking)
        {
            Console.Clear();
            Console.WriteLine($"{CommandShowAllElement} - Вывод всей базы");
            Console.WriteLine($"{CommandAddElement} - Добавлние нового игрока");
            Console.WriteLine($"{CommandRemoveElement} - Удаление игрока по ID");
            Console.WriteLine($"{CommandChangeStatus} - Изменение статуса игрока по ID");
            Console.WriteLine($"{CommandExit} - Выход из программы");
            Console.Write("Выберите пункт меню ");
            userInput = Console.ReadLine();

            switch (userInput)
            {
                case CommandShowAllElement:
                    mybase.ShowInfo();
                    break;
                case CommandAddElement:
                    mybase.AddPlayer();
                    break;
                case CommandRemoveElement:
                    mybase.RemovePlayer();
                    break;
                case CommandChangeStatus:
                    mybase.ChangeStatusPlayer();
                    break;
                case CommandExit:
                    isWorking = false;
                    break;
            }
        }
    }
}

class Player
{
    public int Level { get; private set; }
    public string Name { get; private set; }
    public bool IsBanned { get; private set; }

    public Player (string name, int level)
    {
        Name = name;
        Level = level;
        IsBanned = false;
    }

    public void UnbanPlayer()
    {
        IsBanned = false;
    }

    public void BanPlayer()
    {
        IsBanned = true;
    }

    public string ShowBannedStatus()
    {
        string text = "Не забанен";

        if (IsBanned == true)
        {
            text = "Забанен";
        }

        return text;
    }
}

class DataBase
{
    private const string CommandBanned = "ban";
    private const string CommandUnbanned = "unb";

    static int IDs = 0;
    private Dictionary<int, Player> _persons;

    public DataBase ()
    {
        _persons = new Dictionary<int, Player>();
    }

    public void AddPlayer ()
    {
        Console.Write("Введите имя нового игрока: ");
        string userName = Console.ReadLine();
        Console.Write($"Введите уровень игрока {userName}: ");

        if (int.TryParse(Console.ReadLine(), out int userLevel) == false)
        {
            userLevel = 1;
        }

        _persons.Add(++IDs, new Player(userName, userLevel));
    }

    public void RemovePlayer()
    {
        Console.Write("Введите ID игрока: ");
        int.TryParse(Console.ReadLine(), out int idChangePlayer);

        if (_persons.ContainsKey(idChangePlayer))
        {
            Console.WriteLine($"Игрока {_persons[idChangePlayer].Name} удален");
            _persons.Remove(idChangePlayer);
        }
        else
        {
            Console.WriteLine("Игрока с таким ID не существует");
        }

        Console.ReadKey();
    }

    public void ShowInfo()
    {
        foreach (var element in _persons)
        {
            Console.WriteLine($"{element.Key} {element.Value.Name} {element.Value.Level} {element.Value.ShowBannedStatus()}");            
        }
        
        Console.ReadKey();
    }

    public void ChangeStatusPlayer()
    {
        Console.Write("Введите ID игрока: ");
        int.TryParse(Console.ReadLine(), out int idChangePlayer);

        if (_persons.ContainsKey(idChangePlayer))
        {
            Console.WriteLine($"{CommandBanned} - Забанить");
            Console.WriteLine($"{CommandUnbanned} - Разбанить");
            Console.Write("Выберите пункт меню ");
            string userInput = Console.ReadLine();

            switch (userInput)
            {
                case CommandBanned:
                    _persons[idChangePlayer].BanPlayer();
                    break;
                case CommandUnbanned:
                    _persons[idChangePlayer].UnbanPlayer();
                    break;
            }
            
            Console.WriteLine($"Статус игрока {_persons[idChangePlayer].Name} изменен на {_persons[idChangePlayer].ShowBannedStatus()}");
        }
        else
        {
            Console.WriteLine("Игрока с таким ID не существует");
        }

        Console.ReadKey();
    }
}
